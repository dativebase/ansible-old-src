###
# Online Linguistic Database configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/environment.html
###

[app:main]
use = egg:old

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

# Beaker sessions
session.type = file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.key = old
session.secret = db49238825c4409897b39f49f29e4d77
session.cookie_expires = true

# sqlalchemy.url = sqlite:///%(here)s/old.sqlite
sqlalchemy.url = mysql+oursql://{{ old_src_db_user }}:{{ old_src_db_password }}@{{ old_src_db_host }}/{{ item.old_inst_name }}

auth.secret = jimbo99
auth.token = auth_tkt
auth.secure = 0
#auth.timeout =
#auth.reissue_time =
#auth.max_age =

# Permanent Store: for storing binary files for corpora, files, users,
# phonologies, ...
permanent_store = %(here)s/store

# Add Language Data
# if value is 1, ISO 639-3 language data will be entered
# When value is 1, make sure language table of db is empty or errors will arise
# if value is 0, ISO 639-3 language data will not be entered
add_language_data = 1

# Empty Database
# if value is 1, no database defaults will be inserted
# 0 is default value
empty_database = 0

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1


###
# Pipeline Configuration
###

#[filter:paste_prefix]
#use = egg:PasteDeploy#prefix

#[pipeline:main]
#pipeline =
#    paste_prefix
#    old

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 127.0.0.1
port = {{ item.old_inst_port }}

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/logging.html
###

[loggers]
keys = root, old, sqlalchemy

[handlers]
keys = console, file

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_old]
level = DEBUG
handlers = file
qualname = old

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_file]
class = FileHandler
level=DEBUG
formatter=generic
args=('{{ item.old_inst_name }}-old.log', 'w')

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s

